on:
  workflow_call:
    inputs:
      is_tag:
        description: 'Is a Git Tag'
        type: string
        required: true
      current_branch_tag:
        description: 'Git branch or Tag'
        type: string
        required: true
    secrets:
      docker_hub_username:
        required: true
      docker_hub_token:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true



jobs:
  build-docker:
    name: build-docker
    runs-on: "ubuntu-latest"
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "linux/amd64",
            platform: "linux/amd64",
            cache: "cache-amd64-stable",
            stableUnstable: "stable"
          }
        - {
            name: "linux/amd64",
            platform: "linux/amd64",
            cache: "cache-amd64-unstable",
            stableUnstable: "unstable"
          }
        
        # ARM 64 builds are deactivated because, with QEMU emulation, we reach the 6h timeouts for a build step
        # in github actions (e.g to run .vcpkg install azure-sdk-cpp and similar) -> to reactivate once we have access
        # to an ARM64 slave
        # - {
        #     name: "linux/arm64",
        #     platform: "linux/arm64",
        #     cache: "cache-arm64" 
        #   }
        # - {
        #     name: "linux/all",
        #     platform: "linux/arm64,linux/amd64",
        #     cache: "cache-all" 
        #   }

    steps:
    
    - name: Maximize build space
      uses: easimon/maximize-build-space@v7
      with:
        # reserve space for docker
        root-reserve-mb: 38000
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Maximize build space (2)
      # to list folder sizes:
      # du -k -d1 * | sort -nr | cut -f2 | xargs -d '\n' du -sh | less
      run: |
        rm -rf /opt/microsoft && rm -rf /opt/google && rm -rf /opt/az \
        rm -rf /usr/share/swift && rm -rf /usr/share/miniconda && rm -rf /usr/share/az_* && rm -rf /usr/share/gradle-* && rm -rf /usr/share/sbt
        sudo rm -rf /etc/skel


    - uses: actions/checkout@v3

    - name: Set up QEMU
      if: ${{ matrix.config.platform == 'linux/arm64' }}
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        config: .github/buildkitd.toml

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.docker_hub_username }}
        password: ${{ secrets.docker_hub_token }}

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3
    #   with:
    #     limit-access-to-actor: true

    - name: Build normal image with local-build.sh
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=normal type=ci step=build currentTag=${{ inputs.current_branch_tag }}-normal-${{ matrix.config.stableUnstable }}

    - name: Install Integration tests prerequisites
      run: sudo apt-get install -y dcmtk

    - name: Run normal image integration tests
      run: ./run-integration-tests.sh version=${{ matrix.config.stableUnstable }} image=normal tagToTest=${{ inputs.current_branch_tag }}-normal-${{ matrix.config.stableUnstable }}
      working-directory: ${{github.workspace}}/docker/integration-tests

    - name: Build full image with local-build.sh
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=full type=ci step=build currentTag=${{ inputs.current_branch_tag }}-full-${{ matrix.config.stableUnstable }}

    - name: Run full image integration tests
      run: ./run-integration-tests.sh version=${{ matrix.config.stableUnstable }} image=full tagToTest=${{ inputs.current_branch_tag }}-full-${{ matrix.config.stableUnstable }}
      working-directory: ${{github.workspace}}/docker/integration-tests

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3
    #   with:
    #     limit-access-to-actor: true

    - name: Push normal image with branch/tag
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=normal type=ci step=push currentTag=${{ inputs.current_branch_tag }}-normal-${{ matrix.config.stableUnstable }} pushTag=${{ inputs.current_branch_tag }}

    - name: Push full image with branch/tag
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=full type=ci step=push currentTag=${{ inputs.current_branch_tag }}-full-${{ matrix.config.stableUnstable }} pushTag=${{ inputs.current_branch_tag }}-full

    - name: Push normal image with latest tag
      if: inputs.is_tag == 'true'
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=normal type=ci step=push currentTag=${{ inputs.current_branch_tag }}-normal-${{ matrix.config.stableUnstable }} pushTag=latest

    - name: Push full image with latest tag
      if: inputs.is_tag == 'true'
      run: ./local-build.sh version=${{ matrix.config.stableUnstable }} platform=${{ matrix.config.platform }} image=full type=ci step=push currentTag=${{ inputs.current_branch_tag }}-full-${{ matrix.config.stableUnstable }} pushTag=latest-full

    - name: Update DockerHub repo description
      uses: peter-evans/dockerhub-description@v3
      if: inputs.is_tag == 'true'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: osimis/orthanc
        readme-filepath: README-dockerhub.md


    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
